version: '3.9'

services:
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

  # Django application
  web:
    # Папка, из которой берется Dockerfile
    build: ./server
   
    # Build commands
    command: sh -c "gunicorn conf.wsgi:application --bind 0.0.0.0:8000 --reload"
    
    # Storage volumes
    volumes:
      # сервер будет перезагружаться при изменениях в коде
      - ./server/:/code/
      # статика будет храниться и вне контейнера
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
     
    # port 8000 доступен другим контейнерам
    expose:
      - 8000

    # 8000 виден извне
    # ports:
    #   - "8000:8000"

    restart: "on-failure"

    depends_on:
      - db

    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    
    env_file:
      - ./.env.dev
  
  db:
    image: postgres
    # файлы базы хранятся снаружи контейнера
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env.dev.db

  telegram-bot:
    # Папка, из которой берется Dockerfile
    build: ./bot
    volumes:
      - ./bot/:/code
    restart: always
    command: sh -c "python main.py"
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: